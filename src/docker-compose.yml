version: "3.8"

networks:
  mynetwork:
    driver: bridge

services:
  mongo:
    image: mongo
    restart: always
    ports:
     - 27017:27017
    networks:
      - mynetwork
    volumes:
      - dbdata6:/data/db

  openbanking.api.web:
    image: openbankingwebapi
    container_name: openbanking.api.web
    build:
      context: .
      dockerfile: OpenBanking.API/Dockerfile
      # args:
      #   - BUILD_CONFIGURATION=${BUILD_CONFIGURATION}
    depends_on:
      - mongo
    ports:
      - "5100:8080"
    networks:
      - mynetwork

  openbanking.ui.web:
    image: openbankinguiweb
    container_name: openbanking.ui.web
    build:
      context: ./OpenBanking.UI
    ports:
      - "3000:8080"
    volumes:
      - ./OpenBanking.UI:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - mynetwork

  openbanking.reverse.proxy:
    image: openbanking.reverse.proxy
    container_name: openbanking.reverse.proxy
    build:
      context: .
      dockerfile: OpenBanking.Infra/NGINX/Dockerfile
    ports:
      - "10000:80"
    depends_on:
      - "openbanking.api.web"
      - "openbanking.ui.web"
    networks:
      - mynetwork
  
  openbanking.worker:
    image: openbankingworker
    container_name: openbanking.worker
    # restart: always
    build:
      context: .
      dockerfile: OpenBanking.Worker/Dockerfile
      # args:
      #   - BUILD_CONFIGURATION=${BUILD_CONFIGURATION}
    depends_on:
      - mongo
    networks:
      - mynetwork

volumes:
  dbdata6: